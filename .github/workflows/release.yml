name: Release

on:
  release:
    types:
      - created

jobs:
  checkVersions:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5

      - name: Get dependencies
        run: pip3 install semver

      # Add your custom version check script here
      # - name: Compare tag version and internal version
      #   env:
      #     TAG: ${{ github.ref }}
      #   run: python3 ./.github/compare_versions.py

  release:
    # needs: checkVersions  # Uncomment if you want version check as prerequisite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js and NPM
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      # TypeScript check
      # - name: Check types
      #   run: npm exec tsc

      # Run ESLint for code linting
      # - name: Run ESLint
      #   run: npm run lint

      # Compile the app
      - name: Compile
        run: npm run build

      # Run tests
      # - name: Run tests
      #   run: npm run test

      # Package the app without publishing
      - name: Package
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm exec electron-builder build --publish=never

      # macOS notarization (if applicable)
      - name: Notarize app for macOS
        if: matrix.os == 'macos-latest'
        run: |
          set -e
          xcrun altool --notarize-app --primary-bundle-id "org.erb.BonBon" --username "$APPLE_ID" --password "$APPLE_ID_PASSWORD" --file release/build/BonBon-*.*.*.dmg | tee notarization_log.txt
          xcrun stapler staple release/build/BonBon-*.*.*.dmg | tee -a notarization_log.txt
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        continue-on-error: true

      - name: Verify macOS notarization
        if: matrix.os == 'macos-latest'
        run: xcrun stapler validate release/build/BonBon-*.*.*.dmg
        continue-on-error: true

      # Linux releases (AppImage and Flatpak)
      - if: matrix.os == 'ubuntu-latest'
        name: Linux AppImage release
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/BonBon-*.*.*.AppImage
          tag: ${{ github.ref }}
        continue-on-error: true

      - if: matrix.os == 'ubuntu-latest'
        name: Linux Flatpak release
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/BonBon-*.*.*.flatpak
          tag: ${{ github.ref }}
        continue-on-error: true

      - if: matrix.os == 'ubuntu-latest'
        name: latest.yml release for Linux
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/*-latest.yml
          tag: ${{ github.ref }}
        continue-on-error: true

      # macOS releases (Intel and ARM64)
      - if: matrix.os == 'macos-latest'
        name: macOS arm64 release
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/BonBon-*.*.*-arm64.dmg
          tag: ${{ github.ref }}
        continue-on-error: true

      - if: matrix.os == 'macos-latest'
        name: macOS intel release
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/BonBon-*.*.*.dmg
          tag: ${{ github.ref }}
        continue-on-error: true

      - if: matrix.os == 'macos-latest'
        name: latest.yml release for macOS
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/*-latest.yml
          tag: ${{ github.ref }}
        continue-on-error: true

      # Windows releases (Installer and latest.yml)
      - if: matrix.os == 'windows-latest'
        name: latest.yml release for Windows
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/*-latest.yml
          tag: ${{ github.ref }}
        continue-on-error: true

      - if: matrix.os == 'windows-latest'
        name: Setup installer for Windows
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/BonBon Setup *.*.*.exe
          tag: ${{ github.ref }}
        continue-on-error: true

name: Release

on:
  release:
    types:
      - created

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js and NPM
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: npm
      
      - name: Install dependencies
        run: npm ci
  
      - name: Check types
        run: npm exec tsc

      - name: Run ESLint
        run: npm run lint

      - name: Compile
        run:
          npm run build

      - name: Check tests
        run: npm run test

      - name: Package
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm exec electron-builder build --publish=never

      - if: matrix.os == 'ubuntu-latest'
        name: Linux Appimage release
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/*-latest.yml
          tag: ${{ github.ref }}
      - if: matrix.os == 'ubuntu-latest'
        name: Linux Appimage release
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/BonBon-*.*.*.AppImage
          tag: ${{ github.ref }}
      - if: matrix.os == 'macos-latest'
        name: macos arm BonBon macos
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/BonBon-*.*.*-arm64.dmg
          tag: ${{ github.ref }}
      - if: matrix.os == 'macos-latest'
        name: macos intel BonBon macos
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/BonBon-*.*.*.dmg
          tag: ${{ github.ref }}
      - if: matrix.os == 'macos-latest'
        name: latest.yml BonBon macos
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/*-latest.yml
          tag: ${{ github.ref }}
      - if: matrix.os == 'windows-latest'
        name: latest.yml BonBon windows
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/*-latest.yml
          tag: ${{ github.ref }}
      - if: matrix.os == 'windows-latest'
        name: setup installer BonBon windows
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/BonBon Setup *.*.*.exe
          tag: ${{ github.ref }}
  telegram:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: get deps
        run: pip3 install python-telegram-bot --pre
      - name: telegram
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        run: python3 ./.github/tbot.py
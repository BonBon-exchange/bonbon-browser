name: Release

on:
  release:
    types:
      - created
  workflow_dispatch:

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js and NPM
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Compile
        run: npm run build

      - name: Package
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx electron-builder build --publish=never

      - if: matrix.os == 'ubuntu-latest'
        name: Upload snap package
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: release/build/*.snap
          tag: ${{ github.ref }}
        continue-on-error: true

      - if: matrix.os == 'ubuntu-latest'
        name: Upload deb package
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: release/build/*.deb
          tag: ${{ github.ref }}
        continue-on-error: true

      - if: matrix.os == 'ubuntu-latest'
        name: Upload rpm package
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: release/build/*.rpm
          tag: ${{ github.ref }}
        continue-on-error: true

      - if: matrix.os == 'ubuntu-latest'
        name: Upload AppImage
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: release/build/*.AppImage
          tag: ${{ github.ref }}
        continue-on-error: true

      - if: matrix.os == 'ubuntu-latest'
        name: Upload tar.gz package
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: release/build/*.tar.gz
          tag: ${{ github.ref }}
        continue-on-error: true

      - if: matrix.os == 'windows-latest'
        name: Upload Windows Installer
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: release/build/BonBon Setup-*.*.*.exe
          tag: ${{ github.ref }}
        continue-on-error: true

      - if: matrix.os == 'windows-latest'
        name: Upload Windows Portable
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: release/build/*.exe
          tag: ${{ github.ref }}
        continue-on-error: true

      - if: matrix.os == 'macos-latest'
        name: Upload macOS Universal DMG
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: release/build/*-universal.dmg
          tag: ${{ github.ref }}
        continue-on-error: true

      - if: matrix.os == 'macos-latest'
        name: Upload macOS arm64 DMG
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: release/build/*-arm64.dmg
          tag: ${{ github.ref }}
        continue-on-error: true

      - if: matrix.os == 'macos-latest'
        name: Upload macOS Intel DMG
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: release/build/*.dmg
          tag: ${{ github.ref }}
        continue-on-error: true

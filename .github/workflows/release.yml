name: Release

on:
  release:
    types:
      - created
  workflow_dispatch:

jobs:
  checkVersions:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5

      - name: Get dependencies
        run: pip3 install semver

  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js and NPM
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Compile
        run: npm run build

      # Flatpak specific setup for Linux
      - if: matrix.os == 'ubuntu-latest'
        name: Install Flatpak
        run: sudo apt-get install -y flatpak flatpak-builder

      # Build and package for Flatpak
      - if: matrix.os == 'ubuntu-latest'
        name: Build Flatpak package
        run: |
          npm exec electron-builder --linux flatpak

      # Upload the Flatpak package
      - if: matrix.os == 'ubuntu-latest'
        name: Upload Flatpak
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: release/build/BonBon-*.*.*.flatpak
          tag: ${{ github.ref }}
        continue-on-error: true

      # Packaging for Linux (Snap)
      - if: matrix.os == 'ubuntu-latest'
        name: Build Snap package
        run: |
          sudo apt-get update
          sudo apt-get install snapcraft -y
          snapcraft

      - if: matrix.os == 'ubuntu-latest'
        name: Upload Snap package
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: release/build/BonBon-*.*.*.snap
          tag: ${{ github.ref }}
        continue-on-error: true

      # Linux AppImage release
      - if: matrix.os == 'ubuntu-latest'
        name: Linux AppImage release
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/BonBon-*.*.*.AppImage
          tag: ${{ github.ref }}
        continue-on-error: true

      # Packaging for Linux tar.gz
      - if: matrix.os == 'ubuntu-latest'
        name: Build Linux Tarball
        run: npm exec electron-builder --linux tar.gz

      - if: matrix.os == 'ubuntu-latest'
        name: Upload Linux Tarball
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/*.tar.gz
          tag: ${{ github.ref }}
        continue-on-error: true

      # Windows Portable release
      - if: matrix.os == 'windows-latest'
        name: Build Windows Portable
        run: npm exec electron-builder --win portable

      - if: matrix.os == 'windows-latest'
        name: Upload Windows Portable
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/*.exe
          tag: ${{ github.ref }}
        continue-on-error: true

      # Windows releases (Installer and latest.yml)
      - if: matrix.os == 'windows-latest'
        name: latest.yml release for Windows
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/*-latest.yml
          tag: ${{ github.ref }}
        continue-on-error: true

      - if: matrix.os == 'windows-latest'
        name: Setup installer for Windows
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/BonBon Setup *.*.*.exe
          tag: ${{ github.ref }}
        continue-on-error: true

      # macOS releases
      # - if: matrix.os == 'macos-latest'
      #   name: macOS arm64 release
      #   uses: svenstaro/upload-release-action@2.3.0
      #   with:
      #     file_glob: true
      #     file: release/build/BonBon-*.*.*-arm64.dmg
      #     tag: ${{ github.ref }}
      #   continue-on-error: true

      - if: matrix.os == 'macos-latest'
        name: macOS intel release
        uses: svenstaro/upload-release-action@2.3.0
        with:
          file_glob: true
          file: release/build/BonBon-*.*.*.dmg
          tag: ${{ github.ref }}
        continue-on-error: true

name: Package

on: push

jobs:
  deps:
    name: Setup and get deps
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js and NPM
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: install ts-node
        run: |
          npm install ts-node

      - name: add ts-node-path
        if: runner.os == 'Windows'
        run: |
          echo "::add-path::node_modules/.bin"

      - name: Install dependencies
        run: |
          npm install ts-node \
          npm ci --omit=dev

      - name: Compile
        run: |
          npm install --save-dev concurrently \
          npm run build

      - name: Package
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm exec electron-builder build --publish=never

      - if: matrix.os == 'ubuntu-latest'
        name: Ubuntu release
        uses: actions/upload-artifact@v4
        with:
          name: BonBon-linux
          path: |
            release/build/*-latest.yml
            release/build/BonBon-*.*.*.AppImage
      - if: matrix.os == 'macos-latest'
        name: MacOS release
        uses: actions/upload-artifact@v4
        with:
          name: BonBon-macos
          path: |
            release/build/*-latest.yml
            release/build/BonBon-*.*.*-arm64.dmg
            release/build/BonBon-*.*.*.dmg
      - if: matrix.os == 'windows-latest'
        name: Windows release
        uses: actions/upload-artifact@v4
        with:
          name: BonBon-windows
          path: |
            release/build/*-latest.yml
            release/build/BonBon Setup *.*.*.exe
